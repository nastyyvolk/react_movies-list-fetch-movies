{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.js","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","imdbId","getMovie","query","a","fetch","response","ok","Error","statusText","json","FindMovie","useState","setMovie","setQuery","error","setError","onAdd","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","onChange","target","value","onClick","length","movieFromApi","Response","newMovie","Title","Plot","Poster","imdbID","disabled","App","state","data","addMovie","isAlreadyAdded","forEach","setState","currentState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39fd1cb9.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const {\n    title,\n    description = '',\n    imgUrl,\n    imdbUrl,\n  } = props.movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","const BASE_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=20bbe522&t=';\n\nexport const getMovie = async (query) => {\n  const response = await fetch(`${BASE_URL}${query}`);\n\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const { onAdd } = props;\n\n  const findMovie = () => {\n    if (query.length === 0) {\n      setError(true);\n\n      return;\n    }\n\n    (async () => {\n      const movieFromApi = await getMovie(query);\n\n      if (movieFromApi.Response === 'False') {\n        setError(true);\n\n        return;\n      }\n\n      const newMovie: Movie = {\n        title: movieFromApi.Title,\n        description: movieFromApi.Plot,\n        imgUrl: movieFromApi.Poster,\n        imdbUrl: `imdb.com/title/${movieFromApi.imdbID}/`,\n        imdbId: movieFromApi.imdbID,\n      };\n\n      setMovie(newMovie);\n    })();\n  };\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (movie) {\n      onAdd(movie);\n      setQuery('');\n    }\n\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              onChange={handleQuery}\n              value={query}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              disabled={error}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {!error && movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: data,\n  };\n\n  addMovie = (newMovie: Movie) => {\n    const { movies } = this.state;\n    let isAlreadyAdded = false;\n\n    movies.forEach(movie => {\n      if (movie.imdbId === newMovie.imdbId) {\n        isAlreadyAdded = true;\n      }\n    });\n\n    if (!isAlreadyAdded) {\n      this.setState(currentState => ({\n        movies: [...currentState.movies, newMovie],\n      }));\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}