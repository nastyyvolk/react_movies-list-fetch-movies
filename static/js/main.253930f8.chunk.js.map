{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.js","App.tsx","index.tsx"],"names":["MovieCard","props","movie","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","imdbId","FindMovie","useState","setMovie","query","setQuery","error","setError","onAdd","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","onChange","target","value","onClick","length","fetch","then","result","ok","Error","statusText","json","getMovie","Response","newMovie","Title","Plot","Poster","imdbID","catch","loadingError","disabled","App","state","data","addMovie","includes","setState","currentState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.253930f8.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const {\n    title,\n    description = '',\n    imgUrl,\n    imdbUrl,\n  } = props.movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const [movie, setMovie] = useState(null as Movie | null);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const { onAdd } = props;\n\n  const findMovie = () => {\n    setMovie(null);\n    if (query.length === 0) {\n      setError(true);\n\n      return;\n    }\n\n    getMovie(query)\n      .then((result) => {\n        if (result.Response === 'False') {\n          setError(true);\n\n          return;\n        }\n\n        const newMovie: Movie = {\n          title: result.Title,\n          description: result.Plot,\n          imgUrl: result.Poster,\n          imdbUrl: `imdb.com/title/${result.imdbID}/`,\n          imdbId: result.imdbID,\n        };\n\n        setMovie(newMovie);\n      })\n      .catch(loadingError => {\n        throw new Error(`${loadingError}`);\n      });\n  };\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (movie) {\n      onAdd(movie);\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              onChange={handleQuery}\n              value={query}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              disabled={error}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {!error && movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","const BASE_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=20bbe522&t=';\n\nexport const getMovie = (query) => {\n  return fetch(`${BASE_URL}${query}`)\n    .then(result => {\n      if (!result.ok) {\n        throw new Error(result.statusText);\n      }\n\n      return result.json();\n    });\n};\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: data,\n  };\n\n  addMovie = (newMovie: Movie) => {\n    if (!this.state.movies.includes(newMovie)) {\n      this.setState(currentState => ({\n        movies: [...currentState.movies, newMovie],\n      }));\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}